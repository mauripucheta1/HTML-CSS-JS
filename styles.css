body {
    background-color: blanchedalmond;   
    margin: 0%;
    border: none;
}

/* Propiedad FONT-SIZE: Cambia el tamaño de la fuente, donde encontramos diferentes unidades:

    1) px: Unidad más usada y expresa "píxeles".
    2) pt: Unidad que representa "puntos".
    3) in: Unidad que representa pulgadas.
    4) cm: Unidad que representa centímetros.
    5) mm: Unidad que representa milímetros.
    6) em: Unidad relativa al tamaño de letra del elemento.
    7) rem: Unidad relativa al tamaño de letra del documento.
    8) %: Unidad relativa al tamaño del contenedor del elemento.

    Propiedad COLOR: Sirve para aplicar, como su palabra lo dice, color a un texto, encontramos 8 formas posibles:
    1) RGB: El famoso red, green y blue.
    2) RGBA: Lo mismo que RGB pero, se le agrega la propiedad alpha para definir la opacidad del color.
    3) HEX: Una combinación numérica o alfanumérica de 6 dígitos.
    4) HSL: Define los colores en base a matiz, saturación y luminosidad.
    5) HSLA: Lo mismo que HSL pero, se le agrega la propiedad de alpha para definir la opacidad del color.
    6) Nombres de colores: Existen 140 nombres de color predefinidos en CSS.
    7) transparent: Indica la total transparencia.
    8) currentColor: Usa el valor del color del elemento actual (hereda el color del superior)

*/

/* Selector por nombre: */
h1 {
    color: rgb(160, 135, 88);
}

p {
    font-size: 20px;
}

/* Selector por clase */
.textSection {
    background-color: rgb(99, 86, 61);
    color: white;
}

.textSection > article {
    background-color: rgb(202, 176, 127);
}

.headings {
    color: rgb(221, 146, 8);
}

/* Selector por ID */
#firstP {
    font: bold;
    font-size: 35px;
}

/* Selectores específicos: Cada selector tiene un significado:

    1) ~=: Referencia al elemento con un atributo "name" que incluya la palabra, en este caso, "mi".
    2) ^=: Referencia al elemento con un atributo "name" cuyo valor, en este caso, comienze en "mi".
    3) $=: Referencia al elemento con un atributo "name" cuyo valor, en este caso, termine en "mi".
    4) *=: Referencia el elemento con atributo "name" cuyo valor, en este caso, contenga "mi" en cualquier posición.

*/

p[name~="mi"] {
    font-size: 20px;
}
p[name^="mi"] {
    font-size: 20px;
}
p[name$="mi"] {
    font-size: 20px;
}
p[name*="mi"] {
    font-size: 20px;
}

/* Selector por pseudoclase: Permiten referenciar a elementos HTML por medio de sus características, por ejemplo:

    1) :nth-chid(valor): Se selecciona al elemento de una lista de elementos (hijos) a través de su posición específicada en paréntesis.
    2) :first-child: Se selecciona al primer elemento hijo.
    3) :last-child: Se selecciona el último elemento hijo.
    4) :only-child: Se selecciona al único elemento hijo.

    EXTRA 0.1: Para el :nth-child() tenemos dos variantes:
    A) odd: Selecciona todos los hijos con índice impar.
    B) even: Selecciona todos los hijos con índice par.

    EXTRA 0.2: Podemos tener el elemento :not(elemento) que aplica estilos a todos los elementos diferente al posicionado en el paréntesis.

*/

.textEmbebed > p:nth-child(3) {
    color: black;
}

.textEmbebed > p:first-child {
    color: burlywood;
}

.textEmbebed > p:last-child {
    color: chartreuse;
}

/* Propiedades:

    A) Fuente:
        1) font-family: Declara la fuente para mostrar el texto.
        2) font-weight: Declara si el texto se mostrará en negrita o no.
        3) font-style: Determina el estilo de la letra.
        4) font: Nos permite determinar varios valores al mismo tiempo, ejemplo: bold 25px Arial.

    B) Alineamientos:
        1) text-align: Esta propiedad alinea el texto dentro de un elemento, valores: left, right, center y justify.
        2) text-align-last: Esta propiedad alinea la última línea de un parrafo, valores: left, right, center y justify.
        3) text-indent: Determina la sangría del texto.
        4) letter-spacing: Define el espacio entre letras.
        5) word-spacing: Define el espacio entre palabras.
        6) line-height: Define el espacio vertical.
        7) vertical-align: Alinea elementos verticalmente, valores: baseline, sub, super, text-top, text-bottom, middle, top y bottom.
        8) text-decoration: underline, overline, line-through y none.

    C) Fuentes personalizadas: Podemos cargar una fuente personalizada en nuestro documento y luego utilizarla en la propiedad font.
    
        @font-face {
            font-family: "MiNuevaLetra";
            src: url("font.ttf");
        }

    D) Tamaños: Con CSS podemos definir un tamaño personalizado:
        1) width: Especifica el ancho de un elemento.
        2) height: Especifica el alto de un elemento.
        3) overflow: Esta propiedad especifica cómo se mostrará el contenido que desborda el elemento, valores: visible, hidden, scroll y auto.
        4) overflow-x: Lo mismo pero para el eje horizontal X.
        5) overflow-y: Lo mismo pero para el eje vertical Y.
        6) overflow-wrap: Indica si una palabra debería ser dividida en un punto arbitrario cuando no hay suficiente espacio, valores: normal y break-word.

    E) Márgenes y rellenos:
        1) margin: Declara el margen de un elemento, es decir, el espacio al rededor de la caja, valores: superior, derecho, izquierdo e inferior.
        2) padding: Declara el relleno de un elemento, es decir, el espacio entre el contenido del elemento y los límites de la caja, valores de igual manera que el margin.
    
    F) Fondo:
        1) background-color: Asigna un color de fondo a un elemento.
        2) background-image: Asigna una o varias imágenes de fondo a un elemento a través de la función url().
        3) background-position: Declara la posición de comienzo de una imagen de fondo, valores en px o: center, left, right, top y bottom.
        4) background-size: Declara el tamaño de la imagen de fondo, valores en %, px o: cover y contain.
        5) background-repeat: Esta propiedad determina cómo se distribuye la imagen de fondo, valores: repeat, repeat-x, repeat-y y no-repeat.
        6) background-origin: Determina si la imagen de fondo se posicionará considerando el borde, el relleno o el contenido del área del elemento, valores: border-box, padding-box y content-box.
        7) background-clip: Declara el área a cubrir por el fondo, valores: border-box, padding-box y content-box.
        8) background-attachment: Determina si la imagen es estática o se desplaza con el resto de los elementos, valores: scroll (default) y fixed.
        9) background: Nos permite declarar todas las propiedades del fondo al mismo tiempo.
    
    G) Bordes: Estas propiedades se utilizan para:

        +) Borde interno: 

            1) border-width: Define el ancho del borde, valores: superior, derecho, izquierdo e inferior.
            2) border-style: Define el estilo del borde, valores: superior, derecho, izquierdo e inferior. Los valores disponibles son: hidden, dotted, dashed, solid, double, groove, ridge, inset y outset. Podemos ser más específicos y poner border-top-style, border-right-style, border-left-style y border-bottom-style. Explicación de cada uno:
                A) hidden: Oculta el borde.
                B) dotted: El borde se hace con puntos.
                C) dashed: El borde se hace con guiones cortos.
                D) solid: El borde se hace sólido y continuo (línea recta)
                E) double: El borde se hace con dos líneas paralelas.
                F) groove: Da un efecto de 3D "tallado hacia dentro".
                G) ridge: Opuesto a groove, da un efecto de 3D hacia fuera.
                H) inset: Hace que el borde parezca que está hundido dentro de la página.
                I) outset: Opuesto a inset, parece que está eleveado hacia fuera.
            3) border-color: Define el color del borde.
            4) border: Esta propiedad nos permite definir todo en una sola línea.
            5) border-radius: Define el radio del círculo virtual que el navegador utilizará para dibujar las esquinas redondeadas de la caja.

        -) Borde externo:
            1) outline-width: Define el ancho del borde, valores en px, %, em, rem, etc. Acepta también valores como thin, medium y thick.
            2) outline-style: Define el estilo del borde, valores: none, auto, dotted, dashed, groove, ridge, inset y outset.
            3) outline-color: Define el color del borde.
            4) outline-offset: Define el desplazamiento, es decir, a que distancia de la caja se dibujará el borde, valores: px, %, em, rem, etc.
            5) outline: Podemos definir todo en una sola línea.

        %) Bordes avanzados:
            1) border-imagen-source: Determina la imagen que se utilizará para crear el borde, a través de la función url().
            2) border-image-width: Determina el ancho de la imagen que se utilizará como border, valores: px, in, pt, mm, cm, em, rem y %.
            3) border-image-repeat: Determina cómo se utiliza la imagen para definir el borde, valores: repeat, round, stretch y space.
            4) border-image-slice: Declara cómo se cortará la imagen para las esquinas de los bordes, valores: 4 (1 para cada esquina) o 1 solo (aplica para las 4 esquinas)
            5) border-image-outset: Define el desplazamiento del borde en relación a la caja, valores: px, in, pt, mm, cm, em, rem y %.
            6) border-image: Permite definir todos los estilos en una sola línea.

    H) Sombras: 
        1) box-shadow: Genera una sombra desde la caja del elemento y acepta 6 valores: horizontal, vertical, radio de difumminador, valor de propagación, color y el valor inset si queremos que la sombra se propague hacia dentro de la caja.
        2) text-shadow: Genera sombra desde un texto y acepta hasta 4 valores: horizontal, vertical, radio de difuminado y color.
    I) Gradientes:

        ACLARACIÓN: Los gradientes deben utilizarse con una propiedad de cada navegador, que se pone antes del "linear-gradient", ejemplos:
        A) -webkit-: Se utiliza para Safari y Chrome.
        B) -moz-: Se utiliza para Mozilla.
        C) -o-: Se utiliza para Opera.
        D) -ms-: Para Internet Explorer.

        1) linear-gradient: Consta de 3 parametros::after
            A) posición: Indica desde donde comienza: top, bottom, lefth o rigth.
            B) ángulo: Define la dirección y se puede declarar en unidades: deg (grados), grad (gradianes), rad (radianes)  turn (espiras).
            C) colores: Podemos utilizar valores HEX y/o la propiedad transparent.
        2) radial-gradient: Similar a linear-gradient pero incluyen un parámetro más que determina la forma del gradiente, valores: circle o elipse.
        
    
        
*/  

.textSection {
    text-align: center;
    font-weight: 700;
    font-style: italic;
    letter-spacing: normal;
    word-spacing: normal;
    line-height: normal;
    vertical-align: auto;
}



